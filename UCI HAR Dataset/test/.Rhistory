?mutate
submit()
skip()
students4
submit()
submit()
?unique
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
passed
failed
mutate(passed, status = "passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
?rbind
?rbinf_list
?rbind_list
rbind_list(passed, failed)
sat
?separate
submit()
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
year()
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
minute(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1-9-2012")
mdy("1-9-2012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 8, minutes = 34)
this_moment
?now
now("America/New_York")
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15), minutes (50)
arrive <- depart + hours(15) + minutes (50)
?with_tz
arrive <- (arrive, tzone = "Asia/Hong_Kong")
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(dplyr)
## Set working directory
setwd("~/Documents/R")
## Read the household power consumption data set into a data table
## The data set was previously downloded
data <- read.table("household_power_consumption.txt",
sep=";",
header=TRUE,
na.strings="?",
colClasses=c("character","character","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
library(dplyr)
## Set working directory
setwd("~/Documents/R")
data <- read.table("household_power_consumption.txt",
sep=";",
header=TRUE,
na.strings="?",
colClasses=c("character",
"character",
"numeric",
"numeric",
"numeric",
"numeric",
"numeric",
"numeric",
"numeric"))
data$Date <- as.Date(data$Date, "%d/%m/%Y")
power <- subset(data, Date == as.Date('2007-02-01') |
Date == as.Date('2007-02-02'))
d <- as.character(power$Date)
t <- as.character(power$Time)
power$dateTime <- as.POSIXct(strptime(paste(d,t), '%Y-%m-%d %H:%M:%S')
d <- as.character(power$Date)
t <- as.character(power$Time)
power$dateTime <- as.POSIXct(strptime(paste(d,t), '%Y-%m-%d %H:%M:%S'))
plot1 <- function(power) {
hist(power$Global_active_power,
freq = TRUE,
col = 'red',
xlab = "Global Active Power (kilowatts)",
main = "Global Active Power",
ylim = c(0,1200))
}
makePlot1 <- function(power, myFilename = 'plot1.png') {
plot1(power)
png(filename = myFilename, width = 480, height = 480, units = "px")
dev.off()
}
plot1()
plot1(power)
plot2 <- function(power) {
plot(x = power$dateTime,
y = power$Global_active_power,
type = 'l',
xlab = '',
ylab = 'Global Active Power (kilowatts)',
mgp = c(3,1,0))
}
plot2(power)
makePlot2 <- function(power, myFilename = 'plot2.png') {
plot2(power)
png(filename = myFilename, width = 480, height = 480, units = "px")
dev.off()
}
makePlot1(power)
makePlot2(power)
makePlot1(power)
setwd("~/Documents/R")
makePlot1(power)
makePlot2 <- function(power, myFilename = 'plot2.png') {
plot2(power)
dev.copy(png, file = myFilename, width = 480, height = 480, units = "px")
dev.off()
}
makePlot2(power)
makePlot1 <- function(power, myFilename = 'plot1.png') {
plot1(power)
dev.copy(png, file = myFilename, width = 480, height = 480, units = "px")
dev.off()
}
makePlot1(power)
plot3 <- function(power, bty = 'o') {
with(data, {
plot(x = power$dateTime,
y = power$Sub_metering_1,
type = 'l',
col = 'black',
xlab = '',
ylab = 'Energy sub metering')
lines(x = power$dateTime, y = power$Sub_metering_2, col = 'red')
lines(x = power$dateTime, y = power$Sub_metering_3, col = 'blue')
legend('topright',
col = c('black', 'red', 'blue'),
legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1,1,1),
bty = bty)
})
}
plot3(power)
plot3(power)
makePlot3 <- function(power, myFilename = 'plot3.png') {
plot3(power)
dev.copy(png, file = myFilename, width = 480, height = 480, units = "px")
dev.off()
}
makePlot3(power)
plot4 <- function(data) {
plot2 <- function(power) {
plot(x = power$dateTime,
y = power$Global_active_power,
type = 'l',
xlab = '',
ylab = 'Global Active Power (kilowatts)',
mgp = c(3,1,0))
}
plot3 <- function(power, bty = 'o') {
with(data, {
plot(x = power$dateTime,
y = power$Sub_metering_1,
type = 'l',
col = 'black',
xlab = '',
ylab = 'Energy sub metering')
lines(x = power$dateTime, y = power$Sub_metering_2, col = 'red')
lines(x = power$dateTime, y = power$Sub_metering_3, col = 'blue')
legend('topright',
col = c('black', 'red', 'blue'),
legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1,1,1),
bty = bty)
})
}
plotVoltage <- function(power) {
plot(x = power$dateTime,
y = power$Voltage,
type = 'l',
xlab = 'datetime',
ylab = 'Voltage')
}
plotGlobalReactivePower <- function(power) {
plot(x = power$dateTime,
y = power$Global_reactive_power,
type = 'h',
xlab = 'datetime',
ylab = 'Global_reactive_power')
}
par(mfrow = c(2,2))
with(power, {
plot2(power, ylab = 'Global Active Power')
plotVoltage(power)
plot3(power, bty = 'n')
plotGlobalReactivePower(power)
})
}
plot4 <- function(power) {
plot2 <- function(power) {
plot(x = power$dateTime,
y = power$Global_active_power,
type = 'l',
xlab = '',
ylab = 'Global Active Power (kilowatts)',
mgp = c(3,1,0))
}
plot3 <- function(power, bty = 'o') {
with(data, {
plot(x = power$dateTime,
y = power$Sub_metering_1,
type = 'l',
col = 'black',
xlab = '',
ylab = 'Energy sub metering')
lines(x = power$dateTime, y = power$Sub_metering_2, col = 'red')
lines(x = power$dateTime, y = power$Sub_metering_3, col = 'blue')
legend('topright',
col = c('black', 'red', 'blue'),
legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1,1,1),
bty = bty)
})
}
plotVoltage <- function(power) {
plot(x = power$dateTime,
y = power$Voltage,
type = 'l',
xlab = 'datetime',
ylab = 'Voltage')
}
plotGlobalReactivePower <- function(power) {
plot(x = power$dateTime,
y = power$Global_reactive_power,
type = 'h',
xlab = 'datetime',
ylab = 'Global_reactive_power')
}
par(mfrow = c(2,2))
with(power, {
plot2(power, ylab = 'Global Active Power')
plotVoltage(power)
plot3(power, bty = 'n')
plotGlobalReactivePower(power)
})
}
plot4(power)
plot4 <- function(power) {
plot2 <- function(power) {
plot(x = power$dateTime,
y = power$Global_active_power,
type = 'l',
xlab = '',
ylab = 'Global Active Power (kilowatts)',
mgp = c(3,1,0))
}
plot3 <- function(power, bty = 'o') {
with(data, {
plot(x = power$dateTime,
y = power$Sub_metering_1,
type = 'l',
col = 'black',
xlab = '',
ylab = 'Energy sub metering')
lines(x = power$dateTime, y = power$Sub_metering_2, col = 'red')
lines(x = power$dateTime, y = power$Sub_metering_3, col = 'blue')
legend('topright',
col = c('black', 'red', 'blue'),
legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1,1,1),
bty = bty)
})
}
plotVoltage <- function(power) {
plot(x = power$dateTime,
y = power$Voltage,
type = 'l',
xlab = 'datetime',
ylab = 'Voltage')
}
plotGlobalReactivePower <- function(power) {
plot(x = power$dateTime,
y = power$Global_reactive_power,
type = 'h',
xlab = 'datetime',
ylab = 'Global_reactive_power')
}
par(mfrow = c(2,2))
with(power, {
plot2(power,)
plotVoltage(power)
plot3(power, bty = 'n')
plotGlobalReactivePower(power)
})
}
plot4(power)
plot4 <- function(power) {
plot2 <- function(power) {
plot(x = power$dateTime,
y = power$Global_active_power,
type = 'l',
xlab = '',
ylab = 'Global Active Power (kilowatts)',
mgp = c(3,1,0))
}
plot3 <- function(power, bty = 'o') {
with(data, {
plot(x = power$dateTime,
y = power$Sub_metering_1,
type = 'l',
col = 'black',
xlab = '',
ylab = 'Energy sub metering')
lines(x = power$dateTime, y = power$Sub_metering_2, col = 'red')
lines(x = power$dateTime, y = power$Sub_metering_3, col = 'blue')
legend('topright',
col = c('black', 'red', 'blue'),
legend = c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1,1,1),
bty = bty)
})
}
plotVoltage <- function(power) {
plot(x = power$dateTime,
y = power$Voltage,
type = 'l',
xlab = 'datetime',
ylab = 'Voltage')
}
plotGlobalReactivePower <- function(power) {
plot(x = power$dateTime,
y = power$Global_reactive_power,
type = 'h',
xlab = 'datetime',
ylab = 'Global_reactive_power')
}
par(mfrow = c(2,2))
with(power, {
plot2(power)
plotVoltage(power)
plot3(power, bty = 'n')
plotGlobalReactivePower(power)
})
}
plot4(power)
plot4(power)
makePlot4 <- function(power, myFilename = 'plot4.png') {
plot4(power)
dev.copy(png, file = myFilename, width = 480, height = 480, units = "px")
dev.off()
}
makePlot4 <- function(power, myFilename = 'plot4.png') {
plot4(power)
dev.copy(png, file = myFilename, width = 480, height = 480, units = "px")
dev.off()
}
makePlot4(power)
(.52+.7)/(.52*.7+.25*.3)
(.52+.7)/((.52*.7)+(.25*.3))
(.52*.7)/(.52*.7+.25*.3)
(.75*.3)/(.75*.3+.48*.7)
y$X_test <- stack(x[, 1:561])
setwd("~/Documents/R/GCD/UCI HAR Dataset/test")
x <- read.table("X_test.txt")
y$X_test <- stack(x[, 1:561])
as.data.frame(y)
new(data.frame, y)
new(data.table, y)
y <- stack(x[, 1:561])
View(y)
colnames(y) <- c("X_test", "X_test V")
View(y)
x <- read.table("y_test.txt")
View(x)
x <- read.table("X_test.txt")
x2 <- read.table("y_test.txt")
x3 <- read.table("subject_test.txt")
head(x3)
summar(x3)
summary(x3)
summary(x2)
x <- read.table("X_test.txt")
x_test <- read.table("X_test.txt")
y_test <- read.table("y_test.txt")
subject_test <- read.table("subject_test.txt")
View(x_test)
View(y_test)
summary(y_test)
unique(y_test)
unique(subject_test)
setwd("~/Documents/R/GCD/UCI HAR Dataset/test/Inertial Signals")
body_acc_x_test <- read.table("body_acc_x_test.txt")
View(body_acc_x_test)
summary(body_acc_x_test)
library(tidyr)
library(dplyr)
demo(package = "tidyr")
?gather
class(x_test)
View(y_test)
y_test <- read.table(file = "y_test.txt",col.names = "activity_number" )
setwd("~/Documents/R/GCD/UCI HAR Dataset/test")
y_test <- read.table(file = "y_test.txt",col.names = "activity_number" )
View(y_test)
activity_labels <- read.table(file = "activity_labels.txt",col.names = "activity_number" )
setwd("~/Documents/R/GCD/UCI HAR Dataset")
activity_labels <- read.table(file = "activity_labels.txt",
col.names = c("activity_number", "activity_name" )
activity_labels <- read.table(file = "activity_labels.txt",
col.names = c("activity_number", "activity_name" ))
View(activity_labels)
class(activity_labels$activity_name)
activity_labels <- read.table(file = "activity_labels.txt",
col.names = c("activity_number", "activity_name"),
colClasses = c("numeric", "character"))
class(activity_labels$activity_name)
feature_labels <- read.table(file = "features.txt",
col.names = c("feature_number", "feature_name"),
colClasses = c("numeric", "character"))
View(feature_labels)
?outer_join
?merge
x_test <- read.table("X_test.txt")
setwd("~/Documents/R/GCD/UCI HAR Dataset/test")
x_test <- read.table("X_test.txt")
y_test <- read.table("y_test.txt")
subject_test <- read.table("subject_test.txt")
setwd("~/Documents/R/GCD/UCI HAR Dataset")
activity_labels <- read.table(file = "activity_labels.txt",
col.names = c("activity_number", "activity_name"),
colClasses = c("numeric", "character"))
feature_labels <- read.table(file = "features.txt",
col.names = c("feature_number", "feature_name"),
colClasses = c("numeric", "character"))
x_test$group <- "test"
y_test$group <- "test"
merge(x_test, y_test)
DF <- merge(x_test, y_test)
colnames(x_test) <- feature_labels[, 2]
View(x_test)
View(y_test)
setwd("~/Documents/R/GCD/UCI HAR Dataset/test")
y_test <- read.table("y_test.txt", col.names = "activity_number")
View(y_test)
y_test <- read.table("y_test.txt", col.names = "activity_number",
colClasses = "numeric")
View(y_test)
View(activity_labels)
y_test2 <- merge(y_test, activity_labels, by.x = "activity_number", by.y = "activity_number")
View(y_test2)
View(y_test)
View(y_test2)
View(y_test)
y_test2 <- merge(y_test, activity_labels, by = "activity_number")
View(y_test2)
y_test2 <- merge(y_test, activity_labels, by.x = "activity_number")
View(y_test2)
y_test2 <- merge(y_test, activity_labels)
View(y_test2)
y_test2 <- merge(y_test, activity_labels, sort = FALSE)
View(y_test2)
View(y_test)
y_test2$original <- ytest
y_test2$original <- ytest[, 1]
y_test2$original <- y_test[, 1]
View(y_test2)
y_test2 <- inner_join(y_test, activity_labels, by = "activity_number")
View(y_test2)
y_test2$original <- y_test[, 1]
View(y_test2)
